<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- selectdialog -->
	<zorder>2</zorder>
	<defaultcontrol always="true">3</defaultcontrol>
	<onload condition="IsEmpty(Window(Home).Property(DialogVisibility)) + IsEmpty(Window(Home).Property(DialogVisibility2))">SetProperty(DialogVisibility,$INFO[Window.Property(xmlfile)]1,Home)</onload>
	<onload condition="!IsEmpty(Window(Home).Property(DialogVisibility)) + IsEmpty(Window(Home).Property(DialogVisibility2))">SetProperty(DialogVisibility2,$INFO[Window.Property(xmlfile)]2,Home)</onload>
	<onload condition="!IsEmpty(Window(Home).Property(DialogVisibility2)) + IsEmpty(Window(Home).Property(DialogVisibility3))">SetProperty(DialogVisibility3,$INFO[Window.Property(xmlfile)]3,Home)</onload>
	<onload condition="!IsEmpty(Window(Home).Property(DialogVisibility3)) + IsEmpty(Window(Home).Property(DialogVisibility4))">SetProperty(DialogVisibility4,$INFO[Window.Property(xmlfile)]4,Home)</onload>
	<onload condition="!IsEmpty(Window(Home).Property(DialogVisibility4)) + IsEmpty(Window(Home).Property(DialogVisibility5))">SetProperty(DialogVisibility5,$INFO[Window.Property(xmlfile)]5,Home)</onload>
	<onunload condition="IsEmpty(Window(Home).Property(DialogVisibility2)) + SubString(Window(Home).Property(DialogVisibility),Select) + SubString(Window(Home).Property(DialogVisibility),$NUMBER[1])">ClearProperty(DialogVisibility,Home)</onunload>
	<onunload condition="IsEmpty(Window(Home).Property(DialogVisibility3)) + SubString(Window(Home).Property(DialogVisibility2),Select) + SubString(Window(Home).Property(DialogVisibility2),$NUMBER[2])">ClearProperty(DialogVisibility2,Home)</onunload>
	<onunload condition="IsEmpty(Window(Home).Property(DialogVisibility4)) + SubString(Window(Home).Property(DialogVisibility3),Select) + SubString(Window(Home).Property(DialogVisibility3),$NUMBER[3])">ClearProperty(DialogVisibility3,Home)</onunload>
	<onunload condition="IsEmpty(Window(Home).Property(DialogVisibility5)) + SubString(Window(Home).Property(DialogVisibility4),Select) + SubString(Window(Home).Property(DialogVisibility4),$NUMBER[4])">ClearProperty(DialogVisibility4,Home)</onunload>
	<onunload>ClearProperty(DialogVisibility5,Home)</onunload>

	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBLayMEM,$VAR[FixedBBLayValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBSidebarMEM,$VAR[FixedBBSidebarValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBSepXMEM,$VAR[FixedBBSepXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBSepYMEM,$VAR[FixedBBSepYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBShowMEM,$VAR[FixedBBShowValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBCoordXMEM,$VAR[FixedBBCoordXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBCoordYMEM,$VAR[FixedBBCoordYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBSizeXMEM,$VAR[FixedBBSizeXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(BBSizeYMEM,$VAR[FixedBBSizeYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B1TypMEM,$VAR[FixedB1TypValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B1ShowMEM,$VAR[FixedB1ShowValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B1CoordXMEM,$VAR[FixedB1CoordXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B1CoordYMEM,$VAR[FixedB1CoordYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B1SizeXMEM,$VAR[FixedB1SizeXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B1SizeYMEM,$VAR[FixedB1SizeYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B2ShowMEM,$VAR[FixedB2ShowValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B2CoordXMEM,$VAR[FixedB2CoordXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B2CoordYMEM,$VAR[FixedB2CoordYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B2SizeXMEM,$VAR[FixedB2SizeXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B2SizeYMEM,$VAR[FixedB2SizeYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B3ShowMEM,$VAR[FixedB3ShowValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B3CoordXMEM,$VAR[FixedB3CoordXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B3CoordYMEM,$VAR[FixedB3CoordYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B3SizeXMEM,$VAR[FixedB3SizeXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B3SizeYMEM,$VAR[FixedB3SizeYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B3TypMEM,$VAR[FixedB3TypValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B4ShowMEM,$VAR[FixedB4ShowValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B4CoordXMEM,$VAR[FixedB4CoordXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B4CoordYMEM,$VAR[FixedB4CoordYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B4SizeXMEM,$VAR[FixedB4SizeXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B4SizeYMEM,$VAR[FixedB4SizeYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(DIASlideMEM,$VAR[FixedDIASlideValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(DIAPanelMEM,$VAR[FixedDIAPanelValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B5ShowMEM,$VAR[FixedB5ShowValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B5CoordXMEM,$VAR[FixedB5CoordXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B5CoordYMEM,$VAR[FixedB5CoordYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B5SizeXMEM,$VAR[FixedB5SizeXValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B5SizeYMEM,$VAR[FixedB5SizeYValue],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(B5TypMEM,$VAR[FixedB5TypValue],Home)</onunload>					

	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(SectionName,$INFO[Container(9000).ListItem.Property(SectionName)],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(ViewName,$INFO[Container(9100).ListItem.Property(ViewName)],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(SubName,$INFO[Container(9200).ListItem.Property(SubName)],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(CompPrefix,$INFO[Container(9000).ListItem.Property(SectionName),,.]$INFO[Container(9100).ListItem.Property(ViewName),,.],Home)</onunload>
	<onunload condition="Window.IsVisible(Custom_DesignerV2.xml)">SetProperty(IDPrefix,$INFO[Container(9000).ListItem.Property(SectionName),,.]$INFO[Container(9100).ListItem.Property(ViewName),,.]$INFO[Container(9200).ListItem.Property(SubName)],Home)</onunload>

	
	<controls>
		
		<control type="group">
			<visible>[SubString(Window(Home).Property(DialogVisibility),Select) + SubString(Window(Home).Property(DialogVisibility),$NUMBER[1]) + IsEmpty(Window(Home).Property(DialogVisibility2)) + IsEmpty(Window(Home).Property(DialogVisibility3)) + IsEmpty(Window(Home).Property(DialogVisibility4)) + IsEmpty(Window(Home).Property(DialogVisibility5))] | 
					[SubString(Window(Home).Property(DialogVisibility2),Select) + SubString(Window(Home).Property(DialogVisibility2),$NUMBER[2]) + IsEmpty(Window(Home).Property(DialogVisibility3)) + IsEmpty(Window(Home).Property(DialogVisibility4)) + IsEmpty(Window(Home).Property(DialogVisibility5))] |
					[SubString(Window(Home).Property(DialogVisibility3),Select) + SubString(Window(Home).Property(DialogVisibility3),$NUMBER[3]) + IsEmpty(Window(Home).Property(DialogVisibility4)) + IsEmpty(Window(Home).Property(DialogVisibility5))] |
					[SubString(Window(Home).Property(DialogVisibility4),Select) + SubString(Window(Home).Property(DialogVisibility4),$NUMBER[4]) + IsEmpty(Window(Home).Property(DialogVisibility5))] |
					[SubString(Window(Home).Property(DialogVisibility5),Select)  + SubString(Window(Home).Property(DialogVisibility5),$NUMBER[5])]</visible>
			
			<include name="DialogPOS">
				<param name="DialogName" value="DiaSelect" />
			</include>		

		</control>
	</controls>

</window>
