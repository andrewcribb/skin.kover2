<?xml version="1.0" encoding="UTF-8"?>
<window>
	<backgroundcolor>0x00000000</backgroundcolor>
	<defaultcontrol always="true">9000</defaultcontrol>
	<onload>RunScript(script.skinshortcuts,type=buildxml&amp;mainmenuID=9000&amp;levels=0)</onload>
	<onload condition="System.HasAddon(script.favourites)">RunScript(script.favourites)</onload>
	<onload>ClearProperty(ListPos,Home)</onload>
	<onload>Skin.SetString(SkinHelper.RandomFanartDelay,8)</onload>
	<onload>SetProperty(SidebarPos,$INFO[Skin.String(HOM.View1.BBSidebar)],Home)</onload>
	<onload>SetProperty(DialogPos,$INFO[Skin.String(HOM.View1.DIAPanel)],Home)</onload>
	<onunload>SetProperty(BackgroundMEM,$INFO[Container(9000).ListItem.Property(background)],Home)</onunload>
	<controls>

		<control type="image">
			<texture background="true" colordiffuse="$INFO[Skin.String(Color.WP)]">common/white.png</texture>
		</control>		

		<!-- Background -->
		<control type="group">
			<control type="image">
				<texture  background="true">$VAR[HomePic]</texture>
				<visible>[!Player.HasVideo |  [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + !Skin.String(HOM.View1.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + !Skin.String(HOM.View2.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + !Skin.String(HOM.View3.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + !Skin.String(HOM.View4.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + !Skin.String(HOM.View5.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + !Skin.String(HOM.View6.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + !Skin.String(HOM.View7.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + !Skin.String(HOM.View8.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + !Skin.String(HOM.View9.WPVDOTop,VISIBLE)]]] + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.WPBgs,IMAGE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.WPBgs,IMAGE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.WPBgs,IMAGE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.WPBgs,IMAGE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.WPBgs,IMAGE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.WPBgs,IMAGE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.WPBgs,IMAGE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.WPBgs,IMAGE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.WPBgs,IMAGE)]]</visible>
			</control>
			<control type="group">
				<include>skinshortcuts-template-cyclingbg</include>
				<visible>!Player.HasVideo + !Player.HasAudio + [![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.WPVDOTop,VISIBLE)] | ![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.WPVDOTop,VISIBLE)] | ![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.WPVDOTop,VISIBLE)] | ![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.WPVDOTop,VISIBLE)] | ![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.WPVDOTop,VISIBLE)] | ![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.WPVDOTop,VISIBLE)] | ![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.WPVDOTop,VISIBLE)] | ![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.WPVDOTop,VISIBLE)] | ![StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.WPVDOTop,VISIBLE)]]</visible>
			</control>
			<control type="image">
				<texture>common/white.png</texture>
				<colordiffuse>FF000000</colordiffuse>
				<visible>[Player.HasVideo | Player.HasAudio] + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.WPVDOTop,VISIBLE)]] + IsEmpty(Window(10025).Property(PlayingBackgroundMedia))</visible>
			</control>
			<control type="videowindow">
				<visible>Player.HasVideo + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.WPVDOTop,VISIBLE)]]</visible>
			</control>
			<control type="visualisation">
				<visible>Player.HasAudio + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.WPVDOTop,VISIBLE)]] + [!Skin.HasSetting(ArtistslideShow) | [System.HasAddon(script.artistslideshow) + Skin.HasSetting(VisualisationShow)]] + IsEmpty(Window(10025).Property(PlayingBackgroundMedia))</visible>
			</control>
			<control type="multiimage">
				<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
				<aspectratio>scale</aspectratio>
				<timeperimage>10000</timeperimage>
				<fadetime>2000</fadetime>
				<randomize>true</randomize>
				<visible>Player.HasAudio + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.WPVDOTop,VISIBLE)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.WPVDOTop,VISIBLE)]] + System.HasAddon(script.artistslideshow) + Skin.HasSetting(ArtistslideShow)</visible>
				<animation effect="fade" start="100" end="50" time="0" condition="Skin.HasSetting(VisualisationShow) + IsEmpty(Window(10025).Property(PlayingBackgroundMedia))">Conditional</animation>
			</control>
		</control>		

		<include>skinshortcuts-template-viewtype</include>

		<!-- Dialogs Background -->
		<include content="DialogBgDef">
			<param name="CompPrefix" value="HOM.View1" />
		</include>		
			
		<!-- Sidebar -->	
		<control type="group">	
			<animation effect="slide" start="0,0" end="660,0" time="100" condition="Skin.String(HOM.View1.DIAPanel,LEFT) + [Skin.String(HOM.View1.BBSidebar,TOP) | Skin.String(HOM.View1.BBSidebar,BOTTOM)] + !IsEmpty(Window(Home).Property(DialogVisibility)) + Skin.String(HOM.View1.DIASlide,PUSH)">Conditional</animation>
			<animation effect="slide" start="0,0" end="-660,0" time="100" condition="Skin.String(HOM.View1.DIAPanel,RIGHT) + [Skin.String(HOM.View1.BBSidebar,TOP) | Skin.String(HOM.View1.BBSidebar,BOTTOM)] + !IsEmpty(Window(Home).Property(DialogVisibility)) + Skin.String(HOM.View1.DIASlide,PUSH)">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,380" time="100" condition="Skin.String(HOM.View1.DIAPanel,TOP) + [Skin.String(HOM.View1.BBSidebar,RIGHT) | Skin.String(HOM.View1.BBSidebar,LEFT)] + !IsEmpty(Window(Home).Property(DialogVisibility)) + Skin.String(HOM.View1.DIASlide,PUSH)">Conditional</animation>			
			<animation effect="slide" start="0,0" end="0,-380" time="100" condition="Skin.String(HOM.View1.DIAPanel,BOTTOM) + [Skin.String(HOM.View1.BBSidebar,RIGHT) | Skin.String(HOM.View1.BBSidebar,LEFT)] + !IsEmpty(Window(Home).Property(DialogVisibility)) + Skin.String(HOM.View1.DIASlide,PUSH)">Conditional</animation>		
			<animation effect="slide" start="0,0" end="0,-120" time="100" condition="[Skin.String(HOM.View1.DIAPanel,LEFT) | Skin.String(HOM.View1.DIAPanel,RIGHT)] + Skin.String(HOM.View1.BBSidebar,TOP) + !IsEmpty(Window(Home).Property(DialogVisibility)) + !Skin.String(HOM.View1.DIASlide,PUSH)">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,120" time="100" condition="[Skin.String(HOM.View1.DIAPanel,LEFT) | Skin.String(HOM.View1.DIAPanel,RIGHT)] + Skin.String(HOM.View1.BBSidebar,BOTTOM) + !IsEmpty(Window(Home).Property(DialogVisibility)) + !Skin.String(HOM.View1.DIASlide,PUSH)">Conditional</animation>
			<animation effect="slide" start="0,0" end="-120,0" time="100" condition="[Skin.String(HOM.View1.DIAPanel,TOP) | Skin.String(HOM.View1.DIAPanel,BOTTOM)] + Skin.String(HOM.View1.BBSidebar,LEFT) + !IsEmpty(Window(Home).Property(DialogVisibility)) + !Skin.String(HOM.View1.DIASlide,PUSH)">Conditional</animation>
			<animation effect="slide" start="0,0" end="120,0" time="100" condition="[Skin.String(HOM.View1.DIAPanel,TOP) | Skin.String(HOM.View1.DIAPanel,BOTTOM)] + Skin.String(HOM.View1.BBSidebar,RIGHT) + !IsEmpty(Window(Home).Property(DialogVisibility)) + !Skin.String(HOM.View1.DIASlide,PUSH)">Conditional</animation>
				
			<animation effect="fade" start="100" end="0" time="400" reversible="false" condition="System.IdleTime(5) + Skin.String(IdleFade,5) + Skin.String(HOM.View1.BBSBHide,IDLEFADE)">Conditonal</animation>
			<animation effect="fade" start="100" end="0" time="400" reversible="false" condition="System.IdleTime(10) + Skin.String(IdleFade,10) + Skin.String(HOM.View1.BBSBHide,IDLEFADE)">Conditonal</animation>
			<animation effect="fade" start="100" end="0" time="400" reversible="false" condition="System.IdleTime(15) + Skin.String(IdleFade,15) + Skin.String(HOM.View1.BBSBHide,IDLEFADE)">Conditonal</animation>
			<animation effect="fade" start="100" end="0" time="400" reversible="false" condition="System.IdleTime(20) + Skin.String(IdleFade,20) + Skin.String(HOM.View1.BBSBHide,IDLEFADE)">Conditonal</animation>
			<animation effect="fade" start="100" end="0" time="400" reversible="false" condition="System.IdleTime(25) + Skin.String(IdleFade,25) + Skin.String(HOM.View1.BBSBHide,IDLEFADE)">Conditonal</animation>
			<animation effect="fade" start="100" end="0" time="400" reversible="false" condition="System.IdleTime(30) + Skin.String(IdleFade,30) + Skin.String(HOM.View1.BBSBHide,IDLEFADE)">Conditonal</animation>
			<animation effect="fade" start="100" end="75" time="0" condition="IsEmpty(Window(Home).Property(DialogVisibility)) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.BBSBHide,ENABLED) + Skin.String(HOM.View1.BBSizeX,3COLUMN) + Skin.String(HOM.View1.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.BBSBHide,ENABLED) + Skin.String(HOM.View2.BBSizeX,3COLUMN) + Skin.String(HOM.View2.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.BBSBHide,ENABLED) + Skin.String(HOM.View3.BBSizeX,3COLUMN) + Skin.String(HOM.View3.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.BBSBHide,ENABLED) + Skin.String(HOM.View4.BBSizeX,3COLUMN) + Skin.String(HOM.View4.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.BBSBHide,ENABLED) + Skin.String(HOM.View5.BBSizeX,3COLUMN) + Skin.String(HOM.View5.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.BBSBHide,ENABLED) + Skin.String(HOM.View6.BBSizeX,3COLUMN) + Skin.String(HOM.View6.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.BBSBHide,ENABLED) + Skin.String(HOM.View7.BBSizeX,3COLUMN) + Skin.String(HOM.View7.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.BBSBHide,ENABLED) + Skin.String(HOM.View8.BBSizeX,3COLUMN) + Skin.String(HOM.View8.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.BBSBHide,ENABLED) + Skin.String(HOM.View9.BBSizeX,3COLUMN) + Skin.String(HOM.View9.BBSizeY,3ROW)]] + !Control.HasFocus(9000)">Conditional</animation>	
			<animation effect="fade" start="100" end="0" time="200" condition="IsEmpty(Window(Home).Property(DialogVisibility)) + !Window.IsVisible(script-ExtendedInfo Script-DialogInfo.xml) + !Window.IsVisible(script-ExtendedInfo Script-DialogVideoInfo.xml) + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.BBSBHide,ENABLED) + Skin.String(HOM.View1.BBSizeX,3COLUMN) + Skin.String(HOM.View1.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.BBSBHide,ENABLED) + Skin.String(HOM.View2.BBSizeX,3COLUMN) + Skin.String(HOM.View2.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.BBSBHide,ENABLED) + Skin.String(HOM.View3.BBSizeX,3COLUMN) + Skin.String(HOM.View3.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.BBSBHide,ENABLED) + Skin.String(HOM.View4.BBSizeX,3COLUMN) + Skin.String(HOM.View4.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.BBSBHide,ENABLED) + Skin.String(HOM.View5.BBSizeX,3COLUMN) + Skin.String(HOM.View5.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.BBSBHide,ENABLED) + Skin.String(HOM.View6.BBSizeX,3COLUMN) + Skin.String(HOM.View6.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.BBSBHide,ENABLED) + Skin.String(HOM.View7.BBSizeX,3COLUMN) + Skin.String(HOM.View7.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.BBSBHide,ENABLED) + Skin.String(HOM.View8.BBSizeX,3COLUMN) + Skin.String(HOM.View8.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.BBSBHide,ENABLED) + Skin.String(HOM.View9.BBSizeX,3COLUMN) + Skin.String(HOM.View9.BBSizeY,3ROW)]] + System.IdleTime(1) + !Control.HasFocus(9000)">Conditional</animation>	
			<animation effect="fade" start="100" end="0" time="200" condition="[!Control.HasFocus(9000) | Window.IsVisible(contextmenu)] + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.BBSBHide,ENABLED) + Skin.String(HOM.View1.BBSizeX,3COLUMN) + Skin.String(HOM.View1.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.BBSBHide,ENABLED) + Skin.String(HOM.View2.BBSizeX,3COLUMN) + Skin.String(HOM.View2.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.BBSBHide,ENABLED) + Skin.String(HOM.View3.BBSizeX,3COLUMN) + Skin.String(HOM.View3.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.BBSBHide,ENABLED) + Skin.String(HOM.View4.BBSizeX,3COLUMN) + Skin.String(HOM.View4.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.BBSBHide,ENABLED) + Skin.String(HOM.View5.BBSizeX,3COLUMN) + Skin.String(HOM.View5.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.BBSBHide,ENABLED) + Skin.String(HOM.View6.BBSizeX,3COLUMN) + Skin.String(HOM.View6.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.BBSBHide,ENABLED) + Skin.String(HOM.View7.BBSizeX,3COLUMN) + Skin.String(HOM.View7.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.BBSBHide,ENABLED) + Skin.String(HOM.View8.BBSizeX,3COLUMN) + Skin.String(HOM.View8.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.BBSBHide,ENABLED) + Skin.String(HOM.View9.BBSizeX,3COLUMN) + Skin.String(HOM.View9.BBSizeY,3ROW)]] + System.IdleTime(1)">Conditional</animation>
			<animation effect="fade" start="100" end="0" time="100" condition="[!Control.HasFocus(9000) | Window.IsVisible(contextmenu)] + [[StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View1) + Skin.String(HOM.View1.BBSBHide,HIDDEN) + Skin.String(HOM.View1.BBSizeX,3COLUMN) + Skin.String(HOM.View1.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View2) + Skin.String(HOM.View2.BBSBHide,HIDDEN) + Skin.String(HOM.View2.BBSizeX,3COLUMN) + Skin.String(HOM.View2.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View3) + Skin.String(HOM.View3.BBSBHide,HIDDEN) + Skin.String(HOM.View3.BBSizeX,3COLUMN) + Skin.String(HOM.View3.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View4) + Skin.String(HOM.View4.BBSBHide,HIDDEN) + Skin.String(HOM.View4.BBSizeX,3COLUMN) + Skin.String(HOM.View4.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View5) + Skin.String(HOM.View5.BBSBHide,HIDDEN) + Skin.String(HOM.View5.BBSizeX,3COLUMN) + Skin.String(HOM.View5.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View6) + Skin.String(HOM.View6.BBSBHide,HIDDEN) + Skin.String(HOM.View6.BBSizeX,3COLUMN) + Skin.String(HOM.View6.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View7) + Skin.String(HOM.View7.BBSBHide,HIDDEN) + Skin.String(HOM.View7.BBSizeX,3COLUMN) + Skin.String(HOM.View7.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View8) + Skin.String(HOM.View8.BBSBHide,HIDDEN) + Skin.String(HOM.View8.BBSizeX,3COLUMN) + Skin.String(HOM.View8.BBSizeY,3ROW)] | [StringCompare(Container(9000).ListItem.Property(viewtype),HOM.View9) + Skin.String(HOM.View9.BBSBHide,HIDDEN) + Skin.String(HOM.View9.BBSizeX,3COLUMN) + Skin.String(HOM.View9.BBSizeY,3ROW)]]">Conditional</animation>		

			<!-- Sidebar Position-->	
			<control type="group">	
				<visible>!StringCompare(Window(Home).Property(DialogVisibility),VISIBLE)</visible>
				<control type="group">		
					<visible>Skin.String(HOM.View1.BBSidebar,LEFT) | Skin.String(HOM.View1.BBSidebar,RIGHT)</visible>	
					<include condition="[Skin.String(HOM.View1.BBSidebar,LEFT) | Skin.String(HOM.View1.BBSidebar,RIGHT)] + [Skin.String(HOM.MenuSize,DEFAULT) | IsEmpty(Skin.String(HOM.MenuSize))]">BarVPreview</include>
					<include condition="[Skin.String(HOM.View1.BBSidebar,LEFT) | Skin.String(HOM.View1.BBSidebar,RIGHT)] + Skin.String(HOM.MenuSize,MEDIUM)">BarVPreviewMedium</include>
					<include condition="[Skin.String(HOM.View1.BBSidebar,LEFT) | Skin.String(HOM.View1.BBSidebar,RIGHT)] + Skin.String(HOM.MenuSize,LARGE)">BarVPreviewLarge</include>
					<animation effect="slide" start="0,0" end="1800,0" time="0" condition="Skin.String(HOM.View1.BBSidebar,RIGHT) + [Skin.String(HOM.MenuSize,DEFAULT) | IsEmpty(Skin.String(HOM.MenuSize))]">Conditional</animation>
					<animation effect="slide" start="0,0" end="1590,0" time="0" condition="Skin.String(HOM.View1.BBSidebar,RIGHT) + Skin.String(HOM.MenuSize,MEDIUM)">Conditional</animation><animation effect="slide" start="0,0" end="1272,0" time="0" condition="Skin.String(HOM.View1.BBSidebar,RIGHT) + Skin.String(HOM.MenuSize,LARGE)">Conditional</animation>
				</control>
				
				<control type="group">		
					<visible>Skin.String(HOM.View1.BBSidebar,TOP) | Skin.String(HOM.View1.BBSidebar,BOTTOM)</visible>
					<include condition="[Skin.String(HOM.View1.BBSidebar,TOP) | Skin.String(HOM.View1.BBSidebar,BOTTOM)] + [Skin.String(HOM.MenuSize,DEFAULT) | IsEmpty(Skin.String(HOM.MenuSize))]">BarHPreview</include>
					<include condition="[Skin.String(HOM.View1.BBSidebar,TOP) | Skin.String(HOM.View1.BBSidebar,BOTTOM)] + Skin.String(HOM.MenuSize,MEDIUM)">BarHPreviewMedium</include>
					<include condition="[Skin.String(HOM.View1.BBSidebar,TOP) | Skin.String(HOM.View1.BBSidebar,BOTTOM)] + Skin.String(HOM.MenuSize,LARGE)">BarHPreviewLarge</include>
					<animation effect="slide" start="0,0" end="0,960" time="0" condition="Skin.String(HOM.View1.BBSidebar,BOTTOM) + [Skin.String(HOM.MenuSize,DEFAULT) | IsEmpty(Skin.String(HOM.MenuSize))]">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,890" time="0" condition="Skin.String(HOM.View1.BBSidebar,BOTTOM) + Skin.String(HOM.MenuSize,MEDIUM)">Conditional</animation>
					<animation effect="slide" start="0,0" end="0,712" time="0" condition="Skin.String(HOM.View1.BBSidebar,BOTTOM) + Skin.String(HOM.MenuSize,LARGE)">Conditional</animation>		
				</control>

			</control>
				
			<control type="wraplist" id="9000">
				<scrolltime>200</scrolltime>
				<include condition="Skin.String(HOM.View1.BBLay,VERTICAL) + [Skin.String(HOM.MenuSize,DEFAULT) | IsEmpty(Skin.String(HOM.MenuSize))]" name="HomeV">
					<param name="Id" value="$INFO[Window(Home).Property(SubMenuID)]" />
				</include>
				<include condition="Skin.String(HOM.View1.BBLay,VERTICAL) + Skin.String(HOM.MenuSize,MEDIUM)" name="HomeVMedium">
					<param name="Id" value="$INFO[Window(Home).Property(SubMenuID)]" />
				</include>
				<include condition="Skin.String(HOM.View1.BBLay,VERTICAL) + Skin.String(HOM.MenuSize,LARGE)" name="HomeVLarge">
					<param name="Id" value="$INFO[Window(Home).Property(SubMenuID)]" />
				</include>
				<include condition="Skin.String(HOM.View1.BBLay,HORIZONTAL) + [Skin.String(HOM.MenuSize,DEFAULT) | IsEmpty(Skin.String(HOM.MenuSize))]" name="HomeH">
					<param name="Id" value="$INFO[Window(Home).Property(SubMenuID)]" />
				</include>
				<include condition="Skin.String(HOM.View1.BBLay,HORIZONTAL) + Skin.String(HOM.MenuSize,MEDIUM)" name="HomeHMedium">
					<param name="Id" value="$INFO[Window(Home).Property(SubMenuID)]" />
				</include>
				<include condition="Skin.String(HOM.View1.BBLay,HORIZONTAL) + Skin.String(HOM.MenuSize,LARGE)" name="HomeHLarge">
					<param name="Id" value="$INFO[Window(Home).Property(SubMenuID)]" />
				</include>
				<animation effect="slide" start="0,0" end="1800,0" time="0" condition="Skin.String(HOM.View1.BBSidebar,RIGHT) + Skin.String(HOM.MenuSize,DEFAULT)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1590,0" time="0" condition="Skin.String(HOM.View1.BBSidebar,RIGHT) + Skin.String(HOM.MenuSize,MEDIUM)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1272,0" time="0" condition="Skin.String(HOM.View1.BBSidebar,RIGHT) + Skin.String(HOM.MenuSize,LARGE)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,960" time="0" condition="Skin.String(HOM.View1.BBSidebar,BOTTOM) + Skin.String(HOM.MenuSize,DEFAULT)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,890" time="0" condition="Skin.String(HOM.View1.BBSidebar,BOTTOM) + Skin.String(HOM.MenuSize,MEDIUM)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,672" time="0" condition="Skin.String(HOM.View1.BBSidebar,BOTTOM) + Skin.String(HOM.MenuSize,LARGE)">Conditional</animation>
				<onfocus>ClearProperty(DialogVisibility,Home)</onfocus>
				<onfocus>ClearProperty(DialogVisibility2,Home)</onfocus>
				<onfocus>ClearProperty(DialogVisibility3,Home)</onfocus>
				<onfocus>ClearProperty(DialogVisibility4,Home)</onfocus>
				<onfocus>ClearProperty(DialogVisibility5,Home)</onfocus>

				<itemlayout width="80" height="80" condition="Skin.String(HOM.MenuSize,DEFAULT) | IsEmpty(Skin.String(HOM.MenuSize))">
					<control type="image">
						<animation effect="fade" start="100" end="0" time="200" condition="Control.HasFocus(98)">Conditional</animation>
						<left>15</left>
						<top>15</top>
						<width>50</width>
						<height>50</height>
						<align>center</align>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(Color.SBIconNF)]">$INFO[ListItem.Icon]</texture>
						<visible>!Window.IsActive(10138)</visible>
						<visible>Control.HasFocus(9000)</visible>
						<animation effect="fade" start="0" end="100" time="400">Visible</animation>
					</control>
				</itemlayout>

				<itemlayout width="150" height="80" condition="Skin.String(HOM.MenuSize,MEDIUM)">
					<control type="label">
						<bottom>0</bottom>
						<left>0</left>
						<width>150</width>
						<height>80</height>
						<align>center</align>
						<font>Font27R</font>
						<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
						<label>$INFO[ListItem.Label]</label>
						<visible>!Window.IsActive(10138)</visible>
						<visible>Control.HasFocus(9000)</visible>
						<animation effect="slide" start="0,0" end="0,35" time="0" condition="Skin.String(HOM.View1.BBSidebar,BOTTOM) | Skin.String(HOM.View1.BBSidebar,TOP)">Conditional</animation>
						<animation effect="fade" start="0" end="100" time="400">Visible</animation>
					</control>
				</itemlayout>

				<itemlayout width="636" height="80" condition="Skin.String(HOM.MenuSize,LARGE) + [Skin.String(HOM.View1.BBSidebar,LEFT) | Skin.String(HOM.View1.BBSidebar,RIGHT)]">
					<control type="group">
						<visible>Control.HasFocus(9000)</visible>
						<animation effect="fade" start="0" end="100" time="400">Visible</animation>
						<control type="label">
							<top>0</top>
							<right>180</right>
							<width>660</width>
							<height>80</height>
							<align>right</align>
							<aligny>center</aligny>
							<font>Font36</font>
							<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<visible>!Window.IsActive(10138)</visible>
							<visible>Skin.String(HOM.View1.BBSidebar,LEFT)</visible>
						</control>
						<control type="label">
							<top>0</top>
							<left>180</left>
							<width>660</width>
							<height>80</height>
							<align>left</align>
							<aligny>center</aligny>
							<font>Font36</font>
							<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<visible>!Window.IsActive(10138)</visible>
							<visible>Skin.String(HOM.View1.BBSidebar,RIGHT)</visible>
						</control>
					</control>
				</itemlayout>

				<itemlayout width="260" height="380" condition="Skin.String(HOM.MenuSize,LARGE) + [Skin.String(HOM.View1.BBSidebar,TOP) | Skin.String(HOM.View1.BBSidebar,BOTTOM)]">
					<control type="label">
						<top>0</top>
						<left>0</left>
						<width>260</width>
						<height>380</height>
						<align>center</align>
						<aligny>center</aligny>
						<font>Font36</font>
						<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
						<label>$INFO[ListItem.Label]</label>
						<visible>!Window.IsActive(10138)</visible>
						<visible>Control.HasFocus(9000)</visible>
						<animation effect="fade" start="0" end="100" time="400">Visible</animation>
					</control>
				</itemlayout>

				<focusedlayout width="80" height="80" condition="Skin.String(HOM.MenuSize,DEFAULT) | IsEmpty(Skin.String(HOM.MenuSize))">
					<control type="button">
						<texturefocus></texturefocus>
						<texturenofocus></texturenofocus>
						<onfocus>SetProperty(MenuID,$INFO[Container(9000).ListItem.Label])</onfocus>
						<onfocus>SetProperty(MenuIcon,$INFO[Container(9000).ListItem.Icon])</onfocus>
						<onfocus>SetProperty(MenuSection,$INFO[Container(9000).ListItem.Property(submenuVisibility)])</onfocus>
						<onfocus>SetProperty(MenuCategory,$INFO[Container(9000).ListItem.Property(defaultID)])</onfocus>
						<onfocus>SetProperty(MenuArt,$INFO[Container(9000).ListItem.Property(homeart)])</onfocus>
						<onfocus>SetProperty(CompPrefix,$INFO[Container(9000).ListItem.Property(viewtype)])</onfocus>
						<onfocus>ClearProperty(TVSHowNext)</onfocus>
					</control>
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>80</width>
						<height>80</height>
						<align>center</align>
						<texture colordiffuse="$VAR[CategoryColor]">common/white.png</texture>
					</control>
					<control type="image">
						<left>15</left>
						<top>15</top>
						<width>50</width>
						<height>50</height>
						<align>center</align>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">$INFO[ListItem.Icon]</texture>
						<visible>!Window.IsActive(10138)</visible>
					</control>
					<control type="image">
						<left>15</left>
						<top>15</top>
						<width>50</width>
						<height>50</height>
						<align>center</align>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">material/loading.png</texture>
						<animation effect="rotate" start="0" end="360" time="800" center="auto" loop="true" condition="true">Conditional</animation>
						<visible>Window.IsActive(10138)</visible>
					</control>
				</focusedlayout>

				<focusedlayout width="174" height="150" condition="Skin.String(HOM.MenuSize,MEDIUM)">
					<control type="button">
						<texturefocus></texturefocus>
						<texturenofocus></texturenofocus>
						<onfocus>SetProperty(MenuID,$INFO[Container(9000).ListItem.Label])</onfocus>
						<onfocus>SetProperty(MenuIcon,$INFO[Container(9000).ListItem.Icon])</onfocus>
						<onfocus>SetProperty(MenuSection,$INFO[Container(9000).ListItem.Property(submenuVisibility)])</onfocus>
						<onfocus>SetProperty(MenuCategory,$INFO[Container(9000).ListItem.Property(defaultID)])</onfocus>
						<onfocus>SetProperty(MenuArt,$INFO[Container(9000).ListItem.Property(homeart)])</onfocus>
						<onfocus>SetProperty(CompPrefix,$INFO[Container(9000).ListItem.Property(viewtype)])</onfocus>
						<onfocus>ClearProperty(TVSHowNext)</onfocus>
					</control>
					<control type="group">
						<animation effect="slide" start="0,0" end="-70,0" time="100" condition="!Control.HasFocus(9000) + Skin.String(HOM.View1.BBSidebar,lEFT)">Conditional</animation>
						<animation effect="slide" start="0,0" end="70,0" time="100" condition="!Control.HasFocus(9000) + Skin.String(HOM.View1.BBSidebar,RIGHT)">Conditional</animation>
						<control type="image">
							<left>0</left>
							<top>0</top>
							<width>150</width>
							<height>150</height>
							<align>center</align>
							<texture colordiffuse="$VAR[CategoryColor]">common/white.png</texture>
							<animation effect="zoom" start="100" end="53" time="100" center="0,150" condition="!Control.HasFocus(9000) + Skin.String(HOM.View1.BBSidebar,BOTTOM)">Conditional</animation>
							<animation effect="zoom" start="100" end="53" time="100" center="0,0" condition="!Control.HasFocus(9000) + [Skin.String(HOM.View1.BBSidebar,lEFT) | Skin.String(HOM.View1.BBSidebar,TOP)]">Conditional</animation>
							<animation effect="zoom" start="100" end="53" time="100" center="150,0" condition="!Control.HasFocus(9000) + Skin.String(HOM.View1.BBSidebar,RIGHT)">Conditional</animation>
						</control>
						<control type="image">
							<left>0</left>
							<top>25</top>
							<width>150</width>
							<height>60</height>
							<align>center</align>
							<aspectratio>keep</aspectratio>
							<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">$INFO[ListItem.Icon]</texture>
							<visible>!Window.IsActive(10138)</visible>
							<animation effect="zoom" start="100" end="83" time="100" center="-130,390" condition="!Control.HasFocus(9000) + Skin.String(HOM.View1.BBSidebar,BOTTOM)">Conditional</animation>
							<animation effect="zoom" start="100" end="83" time="100" center="-130,-35" condition="!Control.HasFocus(9000) + [Skin.String(HOM.View1.BBSidebar,lEFT) | Skin.String(HOM.View1.BBSidebar,TOP)]">Conditional</animation>
							<animation effect="zoom" start="100" end="83" time="100" center="290,-35" condition="!Control.HasFocus(9000) + Skin.String(HOM.View1.BBSidebar,RIGHT)">Conditional</animation>
						</control>
						<control type="label">
							<bottom>15</bottom>
							<left>0</left>
							<width>150</width>
							<height>40</height>
							<align>center</align>
							<font>Font27</font>
							<textcolor>$INFO[Skin.String(Color.B1Txt1F)]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<visible>!Window.IsActive(10138) + Control.HasFocus(9000)</visible>
							<animation effect="fade" start="0" end="100" time="400">Visible</animation>
						</control>
						<control type="image">
							<left>15</left>
							<top>15</top>
							<width>50</width>
							<height>50</height>
							<align>center</align>
							<aspectratio>keep</aspectratio>
							<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">material/loading.png</texture>
							<animation effect="rotate" start="0" end="360" time="800" center="auto" loop="true" condition="true">Conditional</animation>
							<visible>Window.IsActive(10138)</visible>
						</control>
					</control>
				</focusedlayout>

				<focusedlayout width="636" height="119" condition="Skin.String(HOM.MenuSize,LARGE) + [Skin.String(HOM.View1.BBSidebar,RIGHT) | Skin.String(HOM.View1.BBSidebar,LEFT)]">
					<control type="button">
						<texturefocus></texturefocus>
						<texturenofocus></texturenofocus>
						<onfocus>SetProperty(MenuID,$INFO[Container(9000).ListItem.Label])</onfocus>
						<onfocus>SetProperty(MenuIcon,$INFO[Container(9000).ListItem.Icon])</onfocus>
						<onfocus>SetProperty(MenuSection,$INFO[Container(9000).ListItem.Property(submenuVisibility)])</onfocus>
						<onfocus>SetProperty(MenuCategory,$INFO[Container(9000).ListItem.Property(defaultID)])</onfocus>
						<onfocus>SetProperty(MenuArt,$INFO[Container(9000).ListItem.Property(homeart)])</onfocus>
						<onfocus>SetProperty(CompPrefix,$INFO[Container(9000).ListItem.Property(viewtype)])</onfocus>
						<onfocus>ClearProperty(TVSHowNext)</onfocus>
					</control>
					<control type="group">
						<visible>Control.HasFocus(9000) + Skin.String(HOM.View1.BBSidebar,LEFT)</visible>
						<animation effect="fade" start="0" end="100" time="400">Visible</animation>
						<control type="image">
							<right>100</right>
							<top>20</top>
							<width>8</width>
							<height>40</height>
							<align>center</align>
							<texture colordiffuse="$VAR[CategoryColor]">common/white.png</texture>
						</control>
						<control type="label">
							<top>0</top>
							<right>180</right>
							<width>660</width>
							<height>80</height>
							<align>right</align>
							<aligny>center</aligny>
							<font>Font60</font>
							<textcolor>$INFO[Skin.String(Color.SBClock)]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<visible>!Window.IsActive(10138)</visible>
						</control>
					</control>
					<control type="group">
						<visible>Control.HasFocus(9000) + Skin.String(HOM.View1.BBSidebar,RIGHT)</visible>
						<animation effect="fade" start="0" end="100" time="400">Visible</animation>
						<control type="image">
							<left>100</left>
							<top>20</top>
							<width>8</width>
							<height>40</height>
							<align>center</align>
							<texture colordiffuse="$VAR[CategoryColor]">common/white.png</texture>
						</control>
						<control type="label">
							<top>0</top>
							<left>180</left>
							<width>660</width>
							<height>80</height>
							<align>left</align>
							<aligny>center</aligny>
							<font>Font60</font>
							<textcolor>$INFO[Skin.String(Color.SBClock)]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<visible>!Window.IsActive(10138)</visible>
						</control>
					</control>
				</focusedlayout>
				<focusedlayout width="370" height="380" condition="Skin.String(HOM.MenuSize,LARGE) + [Skin.String(HOM.View1.BBSidebar,TOP) | Skin.String(HOM.View1.BBSidebar,BOTTOM)]">
					<control type="button">
						<texturefocus></texturefocus>
						<texturenofocus></texturenofocus>
						<onfocus>SetProperty(MenuID,$INFO[Container(9000).ListItem.Label])</onfocus>
						<onfocus>SetProperty(MenuIcon,$INFO[Container(9000).ListItem.Icon])</onfocus>
						<onfocus>SetProperty(MenuSection,$INFO[Container(9000).ListItem.Property(submenuVisibility)])</onfocus>
						<onfocus>SetProperty(MenuCategory,$INFO[Container(9000).ListItem.Property(defaultID)])</onfocus>
						<onfocus>SetProperty(MenuArt,$INFO[Container(9000).ListItem.Property(homeart)])</onfocus>
						<onfocus>SetProperty(CompPrefix,$INFO[Container(9000).ListItem.Property(viewtype)])</onfocus>
						<onfocus>ClearProperty(TVSHowNext)</onfocus>
					</control>
					<control type="group">
						<visible>Control.HasFocus(9000)</visible>
						<animation effect="fade" start="0" end="100" time="400">Visible</animation>
						<control type="image">
							<left>0</left>
							<top>250</top>
							<width>370</width>
							<height>8</height>
							<align>center</align>
							<texture colordiffuse="$VAR[CategoryColor]">common/white.png</texture>
						</control>
						<control type="label">
							<top>0</top>
							<left>0</left>
							<width>370</width>
							<height>380</height>
							<align>center</align>
							<aligny>center</aligny>
							<font>Font60</font>
							<textcolor>$INFO[Skin.String(Color.SBClock)]</textcolor>
							<label>$INFO[ListItem.Label]</label>
							<visible>!Window.IsActive(10138)</visible>
						</control>
					</control>
				</focusedlayout>
				<content>
					<include>skinshortcuts-mainmenu</include>
				</content>
			</control>
			<control type="group">
				<animation effect="slide" start="0,1080" end="0,960" time="200" condition="Skin.String(HOM.View1.BBSidebar,BOTTOM)">Visible</animation>
				<animation effect="slide" start="0,-120" end="0,0" time="200" condition="Skin.String(HOM.View1.BBSidebar,TOP)">Visible</animation>
				<visible>Skin.String(HOM.MenuSize,LARGE) + [[!Control.HasFocus(9000) + [Skin.String(HOM.View1.BBSidebar,BOTTOM) | Skin.String(HOM.View1.BBSidebar,TOP)]] | Skin.String(HOM.View1.BBSidebar,RIGHT) | Skin.String(HOM.View1.BBSidebar,LEFT)]</visible>
				<control type="group">
					<animation effect="slide" start="0,0" end="1800,0" time="0" condition="Skin.String(HOM.View1.BBSidebar,RIGHT)">Conditional</animation>
					<control type="image">
						<left>20</left>
						<top>20</top>
						<width>80</width>
						<height>80</height>
						<align>center</align>
						<texture colordiffuse="$VAR[CategoryColor]">common/white.png</texture>
					</control>
					<control type="image">
						<left>35</left>
						<top>35</top>
						<width>50</width>
						<height>50</height>
						<align>center</align>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">$INFO[Window(home).Property(MenuIcon)]</texture>
						<visible>!Window.IsActive(10138)</visible>
					</control>
					<control type="image">
						<left>35</left>
						<top>35</top>
						<width>50</width>
						<height>50</height>
						<align>center</align>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">material/loading.png</texture>
						<animation effect="rotate" start="0" end="360" time="800" center="auto" loop="true" condition="true">Conditional</animation>
						<visible>Window.IsActive(10138)</visible>
					</control>
				</control>
			</control>	
			<control type="label">
				<animation effect="slide" start="0,-120" end="0,0" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
				<top>0</top>
				<left>144</left>
				<width>400</width>
				<height>120</height>
				<align>left</align>
				<font>Font48</font>
				<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
				<label>[UPPERCASE]$INFO[System.CurrentWindow][/UPPERCASE]</label>
				<visible>Skin.String(HOM.View1.BBSidebar,TOP)</visible>
				<visible>!Window.IsActive(10138)</visible>			
				<visible>!Control.HasFocus(9000)</visible>
			</control>
			<control type="label">
				<animation effect="slide" start="0,120" end="0,0" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
				<top>960</top>
				<left>144</left>
				<width>400</width>
				<height>120</height>
				<align>left</align>
				<font>Font48</font>
				<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
				<label>[UPPERCASE]$INFO[System.CurrentWindow][/UPPERCASE]</label>
				<visible>Skin.String(HOM.View1.BBSidebar,BOTTOM)</visible>
				<visible>!Window.IsActive(10138)</visible>
				<visible>!Control.HasFocus(9000)</visible>
			</control>
			<control type="label">
				<top>0</top>
				<left>-400</left>
				<width>400</width>
				<height>120</height>
				<align>right</align>
				<font>Font48</font>
				<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
				<label>[UPPERCASE]$INFO[System.CurrentWindow][/UPPERCASE]</label>
				<animation effect="slide" start="-120,0" end="0,0" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
				<animation effect="rotate" start="0" end="90" time="0" center="60,60" condition="true">Conditional</animation>
				<visible>Skin.String(HOM.View1.BBSidebar,LEFT)</visible>
				<visible>!Window.IsActive(10138)</visible>			
				<visible>!Control.HasFocus(9000)</visible>
			</control>
			<control type="label">
				<top>0</top>
				<left>-400</left>
				<width>400</width>
				<height>120</height>
				<align>right</align>
				<font>Font48</font>
				<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
				<label>[UPPERCASE]$INFO[System.CurrentWindow][/UPPERCASE]</label>
				<animation effect="slide" start="1920,0" end="1800,0" time="200" condition="!Control.HasFocus(9000)">Conditional</animation>
				<animation effect="rotate" start="0" end="90" time="0" center="60,60" condition="true">Conditional</animation>
				<visible>Skin.String(HOM.View1.BBSidebar,RIGHT)</visible>
				<visible>!Window.IsActive(10138)</visible>
				<visible>!Control.HasFocus(9000)</visible>
			</control>
			<control type="label">
				<top>0</top>
				<left>144</left>
				<width>400</width>
				<height>120</height>
				<align>left</align>
				<font>Font48</font>
				<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
				<label>[UPPERCASE]$LOCALIZE[503][/UPPERCASE]</label>
				<animation effect="fade" start="100" end="0" time="400" reversible="true" pulse="true" condition="true">Conditional</animation>	
				<visible>Skin.String(HOM.View1.BBSidebar,TOP)</visible>
				<visible>Window.IsActive(10138)</visible>
			</control>
			<control type="label">
				<top>960</top>
				<left>144</left>
				<width>400</width>
				<height>120</height>
				<align>left</align>
				<font>Font48</font>
				<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
				<label>[UPPERCASE]$LOCALIZE[503][/UPPERCASE]</label>
				<animation effect="fade" start="100" end="0" time="400" reversible="true" pulse="true" condition="true">Conditional</animation>	
				<visible>Skin.String(HOM.View1.BBSidebar,BOTTOM)</visible>
				<visible>Window.IsActive(10138)</visible>
			</control>
			<control type="label">
				<top>0</top>
				<left>-400</left>
				<width>400</width>
				<height>120</height>
				<align>right</align>
				<font>Font48</font>
				<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
				<label>[UPPERCASE]$LOCALIZE[503][/UPPERCASE]</label>
				<animation effect="rotate" start="0" end="90" time="0" center="60,60" condition="true">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="400" reversible="true" pulse="true" condition="true">Conditional</animation>	
				<visible>Skin.String(HOM.View1.BBSidebar,LEFT)</visible>
				<visible>Window.IsActive(10138)</visible>
			</control>
			<control type="label">
				<top>0</top>
				<left>-400</left>
				<width>400</width>
				<height>120</height>
				<align>right</align>
				<font>Font48</font>
				<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
				<label>[UPPERCASE]$LOCALIZE[503][/UPPERCASE]</label>
				<animation effect="rotate" start="0" end="90" time="0" center="60,60" condition="true">Conditional</animation>
				<animation effect="fade" start="100" end="0" time="400" reversible="true" pulse="true" condition="true">Conditional</animation>
				<visible>Skin.String(HOM.View1.BBSidebar,RIGHT)</visible>
				<visible>Window.IsActive(10138)</visible>
			</control>
		</control>
			
	</controls>
</window>