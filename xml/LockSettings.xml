<?xml version="1.0" encoding="UTF-8"?>
<window>
	<!-- LockSettings -->
	<defaultcontrol always="true">5</defaultcontrol>
	<onload condition="IsEmpty(Window(Home).Property(DialogVisibility)) + IsEmpty(Window(Home).Property(DialogVisibility2))">SetProperty(DialogVisibility,$INFO[Window.Property(xmlfile)]1,Home)</onload>
	<onload condition="!IsEmpty(Window(Home).Property(DialogVisibility)) + IsEmpty(Window(Home).Property(DialogVisibility2))">SetProperty(DialogVisibility2,$INFO[Window.Property(xmlfile)]2,Home)</onload>
	<onload condition="!IsEmpty(Window(Home).Property(DialogVisibility2)) + IsEmpty(Window(Home).Property(DialogVisibility3))">SetProperty(DialogVisibility3,$INFO[Window.Property(xmlfile)]3,Home)</onload>
	<onload condition="!IsEmpty(Window(Home).Property(DialogVisibility3)) + IsEmpty(Window(Home).Property(DialogVisibility4))">SetProperty(DialogVisibility4,$INFO[Window.Property(xmlfile)]4,Home)</onload>
	<onload condition="!IsEmpty(Window(Home).Property(DialogVisibility4)) + IsEmpty(Window(Home).Property(DialogVisibility5))">SetProperty(DialogVisibility5,$INFO[Window.Property(xmlfile)]5,Home)</onload>
	<onunload condition="IsEmpty(Window(Home).Property(DialogVisibility2)) + SubString(Window(Home).Property(DialogVisibility),LockSettings) + SubString(Window(Home).Property(DialogVisibility),$NUMBER[1])">ClearProperty(DialogVisibility,Home)</onunload>
	<onunload condition="IsEmpty(Window(Home).Property(DialogVisibility3)) + SubString(Window(Home).Property(DialogVisibility2),LockSettings) + SubString(Window(Home).Property(DialogVisibility2),$NUMBER[2])">ClearProperty(DialogVisibility2,Home)</onunload>
	<onunload condition="IsEmpty(Window(Home).Property(DialogVisibility4)) + SubString(Window(Home).Property(DialogVisibility3),LockSettings) + SubString(Window(Home).Property(DialogVisibility3),$NUMBER[3])">ClearProperty(DialogVisibility3,Home)</onunload>
	<onunload condition="IsEmpty(Window(Home).Property(DialogVisibility5)) + SubString(Window(Home).Property(DialogVisibility4),LockSettings) + SubString(Window(Home).Property(DialogVisibility4),$NUMBER[4])">ClearProperty(DialogVisibility4,Home)</onunload>
	<onunload>ClearProperty(DialogVisibility5,Home)</onunload>
	
	<controls>

		<!-- Background -->
		<control type="group">
			<control type="image">
				<texture background="true">common/blue.jpg</texture>
				<visible>!Player.HasVideo</visible>
			</control>
			<control type="image">
				<texture background="true">$INFO[Container(20).ListItem.Art(fanart)]</texture>
				<visible>!Player.HasVideo + Control.HasFocus(20)</visible>
			</control>
			<control type="image">
				<texture background="true">$INFO[Container(21).ListItem.Art(fanart)]</texture>
				<visible>!Player.HasVideo + Control.HasFocus(21)</visible>
			</control>
			<control type="image">
				<include>FullscreenDimensions</include>
				<texture>common/white.png</texture>
				<colordiffuse>FF000000</colordiffuse>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="videowindow">
				<include>FullscreenDimensions</include>
				<visible>Player.HasVideo</visible>
			</control>
			<control type="visualisation">
				<include>FullscreenDimensions</include>
				<visible>Player.HasAudio</visible>
			</control>
		</control>					

		<!-- Dialogs Background -->
		<control type="group">
			<visible>true</visible>
			<animation effect="slide" start="0,0" end="660,0" time="100" reversible="true" condition="!IsEmpty(Window(Home).Property(DialogVisibility)) + StringCompare(Window(Home).Property(DialogPos),LEFT)">Conditional</animation>
			<animation effect="slide" start="0,0" end="-660,0" time="100" reversible="true" condition="!IsEmpty(Window(Home).Property(DialogVisibility)) + StringCompare(Window(Home).Property(DialogPos),RIGHT)">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,380" time="100" reversible="true" condition="!IsEmpty(Window(Home).Property(DialogVisibility)) + StringCompare(Window(Home).Property(DialogPos),TOP)">Conditional</animation>
			<animation effect="slide" start="0,0" end="0,-380" time="100" reversible="true" condition="!IsEmpty(Window(Home).Property(DialogVisibility)) + StringCompare(Window(Home).Property(DialogPos),BOTTOM)">Conditional</animation>
				
			
			<include content="DialogBg" condition="StringCompare(Window(Home).Property(DialogPos),LEFT) + StringCompare(Window(Home).Property(SidebarPos),LEFT)">
				<param name="PosX" value="-540" />
				<param name="PosY" value="0" />
				<param name="Height" value="1080" />
				<param name="Width" value="660" />
			</include>

			<include content="DialogBg" condition="StringCompare(Window(Home).Property(DialogPos),RIGHT) + StringCompare(Window(Home).Property(SidebarPos),RIGHT)">
				<param name="PosX" value="1800" />
				<param name="PosY" value="0" />
				<param name="Height" value="1080" />
				<param name="Width" value="660" />
			</include>

			<include content="DialogBg" condition="StringCompare(Window(Home).Property(DialogPos),TOP) + StringCompare(Window(Home).Property(SidebarPos),TOP)">
				<param name="PosX" value="0" />
				<param name="PosY" value="-260" />
				<param name="Height" value="380" />
				<param name="Width" value="1920" />
			</include>

			<include content="DialogBg" condition="StringCompare(Window(Home).Property(DialogPos),BOTTOM) + StringCompare(Window(Home).Property(SidebarPos),BOTTOM)">
				<param name="PosX" value="0" />
				<param name="PosY" value="960" />
				<param name="Height" value="380" />
				<param name="Width" value="1920" />
			</include>

			<include content="DialogBg" condition="StringCompare(Window(Home).Property(DialogPos),LEFT) + !StringCompare(Window(Home).Property(SidebarPos),LEFT)">
				<param name="PosX" value="-660" />
				<param name="PosY" value="0" />
				<param name="Height" value="1080" />
				<param name="Width" value="660" />
			</include>

			<include content="DialogBg" condition="StringCompare(Window(Home).Property(DialogPos),RIGHT) + !StringCompare(Window(Home).Property(SidebarPos),RIGHT)">
				<param name="PosX" value="1920" />
				<param name="PosY" value="0" />
				<param name="Height" value="1080" />
				<param name="Width" value="660" />
			</include>

			<include content="DialogBg" condition="StringCompare(Window(Home).Property(DialogPos),TOP) + !StringCompare(Window(Home).Property(SidebarPos),TOP)">
				<param name="PosX" value="0" />
				<param name="PosY" value="-380" />
				<param name="Height" value="380" />
				<param name="Width" value="1920" />
			</include>

			<include content="DialogBg" condition="StringCompare(Window(Home).Property(DialogPos),BOTTOM) + !StringCompare(Window(Home).Property(SidebarPos),BOTTOM)">
				<param name="PosX" value="0" />
				<param name="PosY" value="1080" />
				<param name="Height" value="380" />
				<param name="Width" value="1920" />
			</include>
		</control>	
		
		<control type="group">
			<visible>[SubString(Window(Home).Property(DialogVisibility),LockSettings) + SubString(Window(Home).Property(DialogVisibility),$NUMBER[1]) + IsEmpty(Window(Home).Property(DialogVisibility2)) + IsEmpty(Window(Home).Property(DialogVisibility3)) + IsEmpty(Window(Home).Property(DialogVisibility4)) + IsEmpty(Window(Home).Property(DialogVisibility5))] | 
					[SubString(Window(Home).Property(DialogVisibility2),LockSettings) + SubString(Window(Home).Property(DialogVisibility2),$NUMBER[2]) + IsEmpty(Window(Home).Property(DialogVisibility3)) + IsEmpty(Window(Home).Property(DialogVisibility4)) + IsEmpty(Window(Home).Property(DialogVisibility5))] |
					[SubString(Window(Home).Property(DialogVisibility3),LockSettings) + SubString(Window(Home).Property(DialogVisibility3),$NUMBER[3]) + IsEmpty(Window(Home).Property(DialogVisibility4)) + IsEmpty(Window(Home).Property(DialogVisibility5))] |
					[SubString(Window(Home).Property(DialogVisibility4)LockSettings) + SubString(Window(Home).Property(DialogVisibility4),$NUMBER[4]) + IsEmpty(Window(Home).Property(DialogVisibility5))] |
					[SubString(Window(Home).Property(DialogVisibility5),LockSettings)  + SubString(Window(Home).Property(DialogVisibility5),$NUMBER[5])]</visible>
			
			<include content="DialogPOS">
				<param name="DialogName" value="DIALockSettings" />
			</include>		

		</control>

		<!-- Default button -->
		<include content="DiaGroupListButton">
			<param name="Id" value="7" />
			<param name="OnLeft" value="noop" />
			<param name="OnRight" value="9000" />
		</include>

		<!-- Default radiobutton -->
		<include content="DiaRadio">
			<param name="Id" value="8" />
			<param name="OnLeft" value="noop" />
			<param name="OnRight" value="9000" />
		</include>

		<!-- Default spincontrolex -->
		<include content="DiaSpin">
			<param name="Id" value="9" />
			<param name="OnLeft" value="noop" />
			<param name="OnRight" value="9000" />
		</include>

		<!-- Default Label -->
		<include content="DiaLabel">
			<param name="Id" value="14" />
		</include>

		<!-- Sidebar Position-->	
		<control type="group">	
			<visible>!StringCompare(Window(Home).Property(DialogVisibility),VISIBLE)</visible>
			<control type="group">		
				<visible>StringCompare(Window(Home).Property(SidebarPos),LEFT) | StringCompare(Window(Home).Property(SidebarPos),RIGHT)</visible>	
				<include condition="StringCompare(Window(Home).Property(SidebarPos),LEFT) | StringCompare(Window(Home).Property(SidebarPos),RIGHT)">BarVPreview</include>
				<animation effect="slide" start="0,0" end="1800,0" time="0" condition="StringCompare(Window(Home).Property(SidebarPos),RIGHT)">Conditional</animation>
				<animation effect="fade" start="75" end="0" time="200" delay="1000" condition="!Container(50).OnNext + !Container(50).OnPrevious + StringCompare(Window(Home).Property(SidebarPos),RIGHT) + Skin.String(HOM.View1.BBSizeX,3COLUMN) + Skin.String(HOM.View1.BBSizeY,3ROW)">Conditional</animation>	
				<animation effect="fade" start="75" end="0" time="200" delay="1000" condition="!Container(50).OnNext + !Container(50).OnPrevious + StringCompare(Window(Home).Property(SidebarPos),LEFT) + Skin.String(HOM.View1.BBSizeX,3COLUMN) + Skin.String(HOM.View1.BBSizeY,3ROW)">Conditional</animation>
				<control type="label">
					<top>0</top>
					<left>-400</left>
					<width>400</width>
					<height>120</height>
					<align>right</align>
					<font>Font48</font>
					<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
					<label>[UPPERCASE]$INFO[System.CurrentWindow][/UPPERCASE]</label>
					<animation effect="rotate" start="0" end="90" time="0" center="60,60" condition="true">Conditional</animation>
					<visible>!Window.IsActive(10138)</visible>
				</control>
				<control type="label">
					<top>0</top>
					<left>-400</left>
					<width>400</width>
					<height>120</height>
					<align>right</align>
					<font>Font48</font>
					<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
					<label>[UPPERCASE]$LOCALIZE[503][/UPPERCASE]</label>
					<animation effect="rotate" start="0" end="90" time="0" center="60,60" condition="true">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="400" reversible="true" pulse="true" condition="true">Conditional</animation>
					<visible>Window.IsActive(10138)</visible>
				</control>
				<control type="image">
					<left>20</left>
					<top>20</top>
					<width>80</width>
					<height>80</height>
					<align>center</align>
					<texture colordiffuse="$VAR[CategoryColor]">common/white.png</texture>
				</control>
				<control type="image">
					<left>35</left>
					<top>35</top>
					<width>50</width>
					<height>50</height>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">$INFO[Window(home).Property(MenuIcon)]</texture>
					<visible>!Window.IsActive(10138)</visible>
				</control>		
				<control type="image">
					<left>35</left>
					<top>35</top>
					<width>50</width>
					<height>50</height>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">material/loading.png</texture>
					<animation effect="rotate" start="0" end="360" time="800" center="auto" loop="true" condition="true">Conditional</animation>
					<visible>Window.IsActive(10138)</visible>
				</control>		
			</control>
			
			<control type="group">		
				<visible>StringCompare(Window(Home).Property(SidebarPos),TOP) | StringCompare(Window(Home).Property(SidebarPos),BOTTOM)</visible>
				<include condition="StringCompare(Window(Home).Property(SidebarPos),TOP) | StringCompare(Window(Home).Property(SidebarPos),BOTTOM)">BarHPreview</include>
				<animation effect="slide" start="0,0" end="0,960" time="0" condition="StringCompare(Window(Home).Property(SidebarPos),BOTTOM)">Conditional</animation>
				<animation effect="fade" start="75" end="0" time="200" delay="1000" condition="!Container(50).OnNext + !Container(50).OnPrevious + StringCompare(Window(Home).Property(SidebarPos),TOP) + Skin.String(HOM.View1.BBSizeX,3COLUMN) + Skin.String(HOM.View1.BBSizeY,3ROW)">Conditional</animation>	
				<animation effect="fade" start="75" end="0" time="200" delay="1000" condition="!Container(50).OnNext + !Container(50).OnPrevious + StringCompare(Window(Home).Property(SidebarPos),BOTTOM) + Skin.String(HOM.View1.BBSizeX,3COLUMN) + Skin.String(HOM.View1.BBSizeY,3ROW)">Conditional</animation>		
				<control type="label">
					<top>0</top>
					<left>144</left>
					<width>400</width>
					<height>120</height>
					<align>left</align>
					<aligny>center</aligny>
					<font>Font48</font>
					<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
					<label>[UPPERCASE]$INFO[System.CurrentWindow][/UPPERCASE]</label>
					<visible>!Window.IsActive(10138)</visible>
				</control>
				<control type="label">
					<top>0</top>
					<left>144</left>
					<width>400</width>
					<height>120</height>
					<align>left</align>
					<aligny>center</aligny>
					<font>Font48</font>
					<textcolor>$INFO[Skin.String(Color.SBIconNF)]</textcolor>
					<label>[UPPERCASE]$LOCALIZE[503][/UPPERCASE]</label>
					<animation effect="fade" start="100" end="0" time="400" reversible="true" pulse="true" condition="true">Conditional</animation>
					<visible>Window.IsActive(10138)</visible>
				</control>
				<control type="image">
					<left>20</left>
					<top>20</top>
					<width>80</width>
					<height>80</height>
					<align>center</align>
					<texture colordiffuse="$VAR[CategoryColor]">common/white.png</texture>
				</control>
				<control type="image">
					<left>35</left>
					<top>35</top>
					<width>50</width>
					<height>50</height>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">$INFO[Window(home).Property(MenuIcon)]</texture>
					<visible>!Window.IsActive(10138)</visible>
				</control>		
				<control type="image">
					<left>35</left>
					<top>35</top>
					<width>50</width>
					<height>50</height>
					<align>center</align>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="$INFO[Skin.String(Color.B1Txt1F)]">material/loading.png</texture>
					<animation effect="rotate" start="0" end="360" time="800" center="auto" loop="true" condition="true">Conditional</animation>
					<visible>Window.IsActive(10138)</visible>
				</control>			
			</control>
		</control>	
	</controls>

</window>